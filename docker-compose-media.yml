###########################################################################
###########################################################################
version: "3.7"

services:
  ###########################################################################
  ###########################################################################
  ##
  ##  Docker Compose File: Bazarr (LinuxServer.io)
  ##  Function: Download subtitles for Radarr and Sonarr
  ##
  ##  Documentation: https://docs.linuxserver.io/images/docker-bazarr
  ##
  ###########################################################################
  ###########################################################################
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/bazarr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${WEBUI_PORT_BAZARR:?err}:6767"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:bazarr
      - TP_THEME=${TP_THEME:?err}
    networks:
      - media-network

  ###########################################################################
  ###########################################################################
  ##
  ##  Docker Compose File: Jellyseerr (fallenbagel)
  ##  Function: Media Request Manager
  ##
  ##  Documentation: https://hub.docker.com/r/fallenbagel/jellyseerr
  ##
  ###########################################################################
  ###########################################################################
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/jellyseerr:/app/config
    ports:
      - "${WEBUI_PORT_JELLYSEERR:?err}:5055"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
    networks:
      - media-network

  ###########################################################################
  ###########################################################################
  ##
  ##  Docker Compose File: overseerr (lscr.io/linuxserver)
  ##  Function: Media Request Manager
  ##
  ##  Documentation: https://hub.docker.com/r/linuxserver/overseerr
  ##
  ###########################################################################
  ###########################################################################
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
    volumes:
      -  ${FOLDER_FOR_CONFIGS:?err}/overseerr:/config
    ports:
      - ${WEBUI_PORT_OVERSEERR:?err}:5055
    restart: unless-stopped

  ###########################################################################
  ###########################################################################
  ##
  ##  Docker Compose File: Lidarr (LinuxServer.io)
  ##  Function: Music Library Manager
  ##
  ##  Documentation: https://docs.linuxserver.io/images/docker-lidarr
  ##
  ###########################################################################
  ###########################################################################
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/lidarr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${WEBUI_PORT_LIDARR:?err}:8686"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:lidarr
      - TP_THEME=${TP_THEME:?err}
    networks:
      - media-network

  ###########################################################################
  ###########################################################################
  ##
  ##  Docker Compose File: Mylar3 (LinuxServer.io)
  ##  Function: Comic Library Manager
  ##
  ##  Documentation: https://github.com/mylar3/mylar3/wiki
  ##
  ###########################################################################
  ###########################################################################
  mylar3:
    image: lscr.io/linuxserver/mylar3:latest
    container_name: mylar3
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/mylar3:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${WEBUI_PORT_MYLAR3:?err}:8090"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:mylar3
      - TP_THEME=${TP_THEME:?err}
    networks:
      - media-network

  ###########################################################################
  ###########################################################################
  ##
  ##  Docker Compose File: Prowlarr (LinuxServer.io)
  ##  Function: Indexer and Search Manager
  ##
  ##  Documentation: https://docs.linuxserver.io/images/docker-prowlarr
  ##
  ###########################################################################
  ###########################################################################
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/prowlarr:/config
    ports:
      - "${WEBUI_PORT_PROWLARR:?err}:9696"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:prowlarr
      - TP_THEME=${TP_THEME:?err}
    networks:
      - media-network

  ###########################################################################
  ###########################################################################
  ##
  ##  Docker Compose File: qBittorrent (LinuxServer.io)
  ##  Function: Torrent Download Client
  ##
  ##  Documentation: https://docs.linuxserver.io/images/docker-qbittorrent
  ##
  ###########################################################################
  ###########################################################################
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/qbittorrent:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
      - WEBUI_PORT=${WEBUI_PORT_QBITTORRENT:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:qbittorrent
      - TP_THEME=${TP_THEME:?err}

  ## Do Not Change Network for qBittorrent
  ## qBittorrent MUST always use a VPN / Secure Internet connection

    network_mode: "service:gluetun"

  ###########################################################################
  ###########################################################################
  ##
  ##  Docker Compose File: Radarr (LinuxServer.io)
  ##  Function: Movie Library Manager
  ##
  ##  Documentation: https://docs.linuxserver.io/images/docker-radarr
  ##
  ###########################################################################
  ###########################################################################
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/radarr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${WEBUI_PORT_RADARR:?err}:7878"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:radarr
      - TP_THEME=${TP_THEME:?err}
    networks:
      - media-network

  ###########################################################################
  ###########################################################################
  ##
  ##  Docker Compose File: Readarr (LinuxServer.io)
  ##  Function: Book Library Manager
  ##
  ##  Documentation: https://docs.linuxserver.io/images/docker-readarr
  ##
  ###########################################################################
  ###########################################################################
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/readarr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${WEBUI_PORT_READARR:?err}:8787"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:readarr
      - TP_THEME=${TP_THEME:?err}
    networks:
      - media-network

  ###########################################################################
  ###########################################################################
  ##
  ##  Docker Compose File: SABnzbd (LinuxServer.io)
  ##  Function: Usenet Download Client
  ##
  ##  Documentation: https://docs.linuxserver.io/images/docker-sabnzbd
  ##
  ###########################################################################
  ###########################################################################
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/sabnzbd:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${WEBUI_PORT_SABNZBD:?err}:8080"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sabnzbd
      - TP_THEME=${TP_THEME:?err}
    networks:
      - media-network

  ###########################################################################
  ###########################################################################
  ##
  ##  Docker Compose File: Sonarr (LinuxServer.io)
  ##  Function: Series Library Manager (TV Shows)
  ##
  ##  Documentation: https://docs.linuxserver.io/images/docker-sonarr
  ##
  ###########################################################################
  ###########################################################################
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/sonarr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${WEBUI_PORT_SONARR:?err}:8989"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sonarr
      - TP_THEME=${TP_THEME:?err}
    networks:
      - media-network

  ###########################################################################
  ###########################################################################
  ##
  ##  Docker Compose File: Tdarr V2 (haveagitgat/tdarr)
  ##  Function: Tdarr V2 - Audio/Video library transcoding automation
  ##            (Contains Tdarr_Server and WebUI )
  ##
  ##  Documentation: https://docs.tdarr.io/docs/installation/docker/run-compose/
  ##  https://docs.tdarr.io/docs/installation/docker/hardware-transcoding
  ##
  ###########################################################################
  ###########################################################################
  tdarr:
    image: ghcr.io/haveagitgat/tdarr:latest
    container_name: tdarr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/tdarr/server:/app/server
      - ${FOLDER_FOR_CONFIGS:?err}/tdarr/configs:/app/configs
      - ${FOLDER_FOR_CONFIGS:?err}/tdarr/logs:/app/logs
      - ${FOLDER_FOR_MEDIA:?err}/media/tdarr_transcode_cache:/temp
      - ${FOLDER_FOR_MEDIA:?err}:/data
    ports:
      - "${TDARR_SERVER_PORT:?err}:${TDARR_SERVER_PORT:?err}"
      - "${WEBUI_PORT_TDARR:?err}:${WEBUI_PORT_TDARR:?err}"
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
      - serverIP=0.0.0.0
      - serverPort=${TDARR_SERVER_PORT:?err}
      - webUIPort=${WEBUI_PORT_TDARR:?err}
      - internalNode=true
      - nodeID=Tdarr_Server
    networks:
      - media-network

  tdarr-node:
    image: ghcr.io/haveagitgat/tdarr_node:latest
    container_name: tdarr-node
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/tdarr/configs:/app/configs
      - ${FOLDER_FOR_CONFIGS:?err}/tdarr/logs:/app/logs
      - ${FOLDER_FOR_MEDIA:?err}/media/tdarr_transcode_cache:/temp
      - ${FOLDER_FOR_MEDIA:?err}:/data
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
      - nodeID=Tdarr_Node_1
      - serverIP=0.0.0.0
      - serverPort=${TDARR_SERVER_PORT:?err}
    networks:
      - media-network

  ###########################################################################
  ###########################################################################
  ##
  ##  Docker Compose File: Unpackerr (Hotio.Dev)
  ##  Function: Archive Media Extraction
  ##
  ##  Documentation: https://github.com/davidnewhall/unpackerr
  ##  https://github.com/davidnewhall/unpackerr/blob/master/examples/docker-compose.yml
  ##
  ###########################################################################
  ###########################################################################
  unpackerr:
    image: cr.hotio.dev/hotio/unpackerr:latest
    container_name: unpackerr
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/unpackerr:/config
      - ${FOLDER_FOR_MEDIA:?err}:/data
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
    # Documentation on all Environment Variables can be found at:
    # https://github.com/davidnewhall/unpackerr#docker-env-variables
      - UN_DEBUG=false
      - UN_LOG_FILE=
      - UN_LOG_FILES=10
      - UN_LOG_FILE_MB=10
      - UN_INTERVAL=2m
      - UN_START_DELAY=1m
      - UN_RETRY_DELAY=5m
      - UN_MAX_RETRIES=3
      - UN_PARALLEL=1
      - UN_FILE_MODE=0664
      - UN_DIR_MODE=0775
      # Sonarr Config - Copy API Key from: http://sonarr:8989/general/settings
      - UN_SONARR_0_URL=http://sonarr:8989
      - UN_SONARR_0_API_KEY=
      - UN_SONARR_0_PATHS_0=/data/torrents/anime
      - UN_SONARR_0_PATHS_1=/data/torrents/series
      - UN_SONARR_0_PROTOCOLS=torrent
      - UN_SONARR_0_TIMEOUT=10s
      - UN_SONARR_0_DELETE_ORIG=false
      - UN_SONARR_0_DELETE_DELAY=5m
      # Radarr Config - Copy API Key from: http://radarr:7878/general/settings
      - UN_RADARR_0_URL=http://radarr:7878
      - UN_RADARR_0_API_KEY=
      - UN_RADARR_0_PATHS_0=/data/torrents/movies
      - UN_RADARR_0_PROTOCOLS=torrent
      - UN_RADARR_0_TIMEOUT=10s
      - UN_RADARR_0_DELETE_ORIG=false
      - UN_RADARR_0_DELETE_DELAY=5m
      # Lidarr Config - Copy API Key from: http://lidarr:8686/general/settings
      - UN_LIDARR_0_URL=http://lidarr:8686
      - UN_LIDARR_0_API_KEY=
      - UN_LIDARR_0_PATHS_0=/data/torrents/music
      - UN_LIDARR_0_PROTOCOLS=torrent
      - UN_LIDARR_0_TIMEOUT=10s
      - UN_LIDARR_0_DELETE_ORIG=false
      - UN_LIDARR_0_DELETE_DELAY=5m
      # Readarr Config - Copy API Key from: http://readarr:8787/general/settings
      - UN_READARR_0_URL=http://readarr:8787
      - UN_READARR_0_API_KEY=
      - UN_READARR_0_PATHS_0=/data/torrents/books
      - UN_READARR_0_PROTOCOLS=torrent
      - UN_READARR_0_TIMEOUT=10s
      - UN_READARR_0_DELETE_ORIG=false
      - UN_READARR_0_DELETE_DELAY=5m
      # Folder Config
      - UN_FOLDER_0_PATH=
      - UN_FOLDER_0_EXTRACT_PATH=
      - UN_FOLDER_0_DELETE_AFTER=10m
      - UN_FOLDER_0_DELETE_ORIGINAL=false
      - UN_FOLDER_0_DELETE_FILES=false
      - UN_FOLDER_0_MOVE_BACK=false
      # Webhook Config
      - UN_WEBHOOK_0_URL=
      - UN_WEBHOOK_0_NAME=
      - UN_WEBHOOK_0_NICKNAME=Unpackerr
      - UN_WEBHOOK_0_CHANNEL=
      - UN_WEBHOOK_0_TIMEOUT=10s
      - UN_WEBHOOK_0_SILENT=false
      - UN_WEBHOOK_0_IGNORE_SSL=false
      - UN_WEBHOOK_0_EXCLUDE_0=
      - UN_WEBHOOK_0_EVENTS_0=0
      - UN_WEBHOOK_0_TEMPLATE_PATH=
      - UN_WEBHOOK_0_CONTENT_TYPE=application/json
      # Command Hook Config
      - UN_CMDHOOK_0_COMMAND=
      - UN_CMDHOOK_0_NAME=
      - UN_CMDHOOK_0_TIMEOUT=10s
      - UN_CMDHOOK_0_SILENT=false
      - UN_CMDHOOK_0_SHELL=false
      - UN_CMDHOOK_0_EXCLUDE_0=
      - UN_CMDHOOK_0_EVENTS_0=0
    security_opt:
      - no-new-privileges:true
    network_mode: none

  ###########################################################################
  ###########################################################################
  ##
  ##  Docker Compose File: Plex (LinuxServer.io)
  ##  Function: Plex media server
  ##
  ##  Documentation: https://github.com/louislam/uptime-kuma/wiki
  ##  https://www.plex.tv/
  ##
  ###########################################################################
  ###########################################################################
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
      - VERSION=docker
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/plex:/config
      - ${FOLDER_FOR_MEDIA:?err}/media:/data/media
    restart: unless-stopped


  photoprism:
    image: photoprism/photoprism:latest
    ## Don't enable automatic restarts until PhotoPrism has been properly configured and tested!
    ## If the service gets stuck in a restart loop, this points to a memory, filesystem, network, or database issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    # restart: unless-stopped
    stop_grace_period: 10s
    container_name: photoprism
    depends_on:
      - mariadb
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    ports:
      - ${WEBUI_PORT_PHOTOPRISM:?err}:2342
    environment:
      PHOTOPRISM_ADMIN_USER: "admin"                 # admin login username
      PHOTOPRISM_ADMIN_PASSWORD: "insecure"          # initial admin password (8-72 characters)
      PHOTOPRISM_AUTH_MODE: "password"               # authentication mode (public, password)
      PHOTOPRISM_SITE_URL: "http://192.168.0.115:2342/"  # server URL in the format "http(s)://domain.name(:port)/(path)"
      PHOTOPRISM_ORIGINALS_LIMIT: 50000              # file size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_LOG_LEVEL: "info"                   # log level: trace, debug, info, warning, error, fatal, or panic
      PHOTOPRISM_READONLY: "false"                   # do not modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false"               # enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "false"              # disables updating storage permissions via chmod and chown on startup
      PHOTOPRISM_DISABLE_WEBDAV: "false"             # disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables settings UI and API
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "false"              # disables face detection and recognition (requires TensorFlow)
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # disables image classification (requires TensorFlow)
      PHOTOPRISM_DISABLE_VECTORS: "false"            # disables vector graphics support
      PHOTOPRISM_DISABLE_RAW: "false"                # disables indexing and conversion of RAW images
      PHOTOPRISM_RAW_PRESETS: "false"                # enables applying user presets when converting RAW images (reduces performance)
      PHOTOPRISM_JPEG_QUALITY: 85                    # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
      PHOTOPRISM_DETECT_NSFW: "false"                # automatically flags photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive (no effect without TensorFlow)
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "mariadb:${MARIADB_PORT:?err}"     # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "${PHOTOPRISM_DB_NAME:?err}"         # MariaDB or MySQL database schema name
      PHOTOPRISM_DATABASE_USER: "${MARIADB_USER:?err}"         # MariaDB or MySQL database user name
      PHOTOPRISM_DATABASE_PASSWORD: "${MARIADB_PASSWORD:?err}"       # MariaDB or MySQL database user password
      PHOTOPRISM_SITE_CAPTION: "AI-Powered Photos App"
      PHOTOPRISM_SITE_DESCRIPTION: ""                # meta site description
      PHOTOPRISM_SITE_AUTHOR: ""                     # meta site author
      ## Run/install on first startup (options: update https gpu tensorflow davfs clitools clean):
      PHOTOPRISM_INIT: "https gpu tensorflow"
      ## Hardware Video Transcoding:
      PHOTOPRISM_FFMPEG_ENCODER: "software"        # FFmpeg encoder ("software", "intel", "nvidia", "apple", "raspberry")
      PHOTOPRISM_FFMPEG_BITRATE: "32"              # FFmpeg encoding bitrate limit in Mbit/s (default: 50)
      ## Run as a non-root user after initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
      PHOTOPRISM_UID: ${PUID:?err}
      PHOTOPRISM_GID: ${PGID:?err}
      PHOTOPRISM_UMASK: ${UMASK:?err}
    ## Start as non-root user before initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
    # user: "1000:1000"
    ## Share hardware devices with FFmpeg and TensorFlow (optional):
    devices:
     - "/dev/dri:/dev/dri"                         # Intel QSV
    working_dir: "/photoprism" # do not change or remove
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/photoprism/storage:/photoprism/storage
      - ${FOLDER_FOR_MEDIA:?err}/media/photos:/photoprism/originals
    networks:
      - media-network

  mariadb:
    image: mariadb:10.11

    container_name: mariadb
    restart: unless-stopped
    stop_grace_period: 5s
    security_opt: # see https://github.com/MariaDB/mariadb-docker/issues/434#issuecomment-1136151239
      - seccomp:unconfined
      - apparmor:unconfined
    command: mariadbd --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    ports:
     - ${MARIADB_PORT:?err}:3306
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/photoprism/mariadb:/var/lib/mysql
    environment:
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
      MARIADB_DATABASE: "${PHOTOPRISM_DB_NAME:?err}"
      MARIADB_USER: "${MARIADB_USER:?err}"
      MARIADB_PASSWORD: "${MARIADB_PASSWORD:?err}"
      MARIADB_ROOT_PASSWORD: "${MARIADB_ROOT_PASSWORD:?err}"
    networks:
      - media-network
