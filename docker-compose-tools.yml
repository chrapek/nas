version: "3.7"

services:
  ###########################################################################
  ###########################################################################
  ##
  ##  Docker Compose File: Gluetun (qmcgaw)
  ##  Function: VPN Client
  ##
  ##  Documentation: https://github.com/qdm12/gluetun/wiki
  ##
  ###########################################################################
  ###########################################################################
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    restart: always
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - "8888:8888/tcp"                         # Gluetun Local Network HTTP proxy
      - "8388:8388/tcp"                         # Gluetun Local Network Shadowsocks
      - "8388:8388/udp"                         # Gluetun Local Network Shadowsocks
      - "${WEBUI_PORT_QBITTORRENT:?err}:${WEBUI_PORT_QBITTORRENT:?err}"   # WebUI Portal: qBittorrent
      - "${QBIT_PORT_TCP:?err}:6881/tcp"        # Transmission Torrent Port TCP
      - "${QBIT_PORT_UDP:?err}:6881/udp"        # Transmission Torrent Port UDP

    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/gluetun:/gluetun
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - TZ=${TIMEZONE:?err}
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER:?err}
      - FIREWALL_OUTBOUND_SUBNETS=${LOCAL_SUBNET:?err}
      - OPENVPN_CUSTOM_CONFIG=${OPENVPN_CUSTOM_CONFIG}
      - VPN_TYPE=${VPN_TYPE}
      - VPN_ENDPOINT_IP=${VPN_ENDPOINT_IP}
      - VPN_ENDPOINT_PORT=${VPN_ENDPOINT_PORT}
      - WIREGUARD_PUBLIC_KEY=${WIREGUARD_PUBLIC_KEY}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_PRESHARED_KEY=${WIREGUARD_PRESHARED_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - HTTPPROXY=on
      - SHADOWSOCKS=on

    # NOTE: Gluetun VPN container MUST ONLY connect to the media-network

    networks:
      - media-network

  ###########################################################################
  ###########################################################################
  ##
  ##    Docker Compose File: Heimdall (LinuxServer.io)
  ##    Function: Organise links to web sites and web applications
  ##
  ##    Documentation: https://docs.linuxserver.io/images/docker-heimdall
  ##    https://docs.linuxserver.io/general/swag#using-heimdall-as-the-home-page-at-domain-root
  ##
  ###########################################################################
  ###########################################################################
  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    restart: unless-stopped
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/heimdall:/config
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}

    # NOTE: Heimdall MUST NOT connect to the Gluetun VPN container

    networks:
      - media-network

  ###########################################################################
  ###########################################################################
  ##
  ##  Docker Compose File: Uptime Kuma (louislam/uptime-kuma)
  ##  Function: Uptime Kuma is an easy-to-use self-hosted monitoring tool.
  ##
  ##  Documentation: https://github.com/louislam/uptime-kuma/wiki
  ##  https://uptime.kuma.pet/
  ##
  ###########################################################################
  ###########################################################################
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/uptime-kuma:/app/data
    ports:
      - ${WEBUI_PORT_UPTIME_KUMA:?err}:3001
    restart: always
    networks:
      - media-network

  adguardhome:
    image: adguard/adguardhome
    container_name: adguardhome
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "68:68/tcp"
      - "68:68/udp"
      - "853:853/tcp"
      - ${WEBUI_PORT_ADGUARDHOME:?err}:3000
    volumes:
      - ${FOLDER_FOR_CONFIGS:?err}/adguard/work:/opt/adguardhome/work
      - ${FOLDER_FOR_CONFIGS:?err}/adguard/config:/opt/adguardhome/conf
    restart: unless-stopped
    networks:
      - proxy
      - media-network
    environment:
      - PUID=${PUID:?err}
      - PGID=${PGID:?err}
      - UMASK=${UMASK:?err}
      - TZ=${TIMEZONE:?err}
    labels:
      - traefik.enable=true
      - traefik.http.routers.adguardhome.rule=Host(`${HOST_ADGUARDHOME?:err}.${DOMAIN_LOCAL?:err}`)
      - traefik.http.services.adguardhome.loadbalancer.server.port=${WEBUI_PORT_ADGUARDHOME:?err}
